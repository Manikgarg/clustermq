% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/master.r
\name{Q}
\alias{Q}
\title{Queue function calls on the cluster}
\usage{
Q(fun, ..., const = list(), expand_grid = FALSE, seed = 128965,
  memory = 4096, n_jobs = NULL, job_size = NULL, split_array_by = NA,
  fail_on_error = TRUE, log_worker = FALSE, wait_time = NA,
  chunk_size = NA, template = "LSF")
}
\arguments{
\item{fun}{A function to call}

\item{...}{Objects to be iterated in each function call}

\item{const}{A list of constant arguments passed to each function call}

\item{expand_grid}{Use all combinations of arguments in `...`}

\item{seed}{A seed to set for each function call}

\item{memory}{The amount of Mb to request from LSF; default: 1 Gb}

\item{n_jobs}{The number of LSF jobs to submit}

\item{job_size}{The number of function calls per job; if n_jobs is given,
this will have priority}

\item{split_array_by}{The dimension number to split any arrays in `...`; default: last}

\item{fail_on_error}{If an error occurs on the workers, continue or fail?}

\item{log_worker}{Write a log file for each worker}

\item{wait_time}{Time to wait between messages; set 0 for short cals
defaults to 1/sqrt(number_of_functon_calls)}

\item{template}{Template file to use; will be "template_<template>.r" in this dir}
}
\value{
A list of whatever `fun` returned
}
\description{
exchanging messages between the master and workers works the following way:
 * we have submitted a job where we don't know when it will start up
 * it starts, sends is a message list(id=0) indicating it is ready
 * we send it the function definition and common data
   * we also send it the first data set to work on
 * when we get any id > 0, it is a result that we store
   * and send the next data set/index to work on
 * when computatons are complete, we send id=0 to the worker
   * it responds with id=-1 (and usage stats) and shuts down
}

